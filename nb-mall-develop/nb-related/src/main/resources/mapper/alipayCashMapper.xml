<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2013 大连锦霖科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<mapper namespace="AlipayCash">
    <resultMap id="alipayCashMap" type="AlipayCash">
        <id property="id" column="id"/>
        <result property="cashTotalCount" column="cash_total_count"/>
        <result property="totalFee" column="total_fee"/>
        <result property="alipayFee" column="alipay_fee"/>
        <result property="cashFee" column="cash_fee"/>
        <result property="refundFee" column="refund_fee"/>
        <result property="status" column="status"/>
        <result property="summedAt" column="summed_at"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="table">
        nb_alipay_cash
    </sql>

    <sql id="columns">
        cash_total_count, total_fee, alipay_fee ,cash_fee, refund_fee, status, summed_at, created_at, updated_at
    </sql>

    <insert id="create" parameterType="AlipayCash" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="table"/> (<include refid="columns"/>)
        values
        (
        #{cashTotalCount},
        #{totalFee},
        #{alipayFee},
        #{cashFee},
        #{refundFee},
        0,
        #{summedAt},
        now(),
        now()
        )
    </insert>

    <select id="countOf" parameterType="map" resultType="long">
        select count(1)
        from <include refid="table"/>
        <where>
            <if test="criteria != null and criteria.status != null">
                AND status = #{criteria.status}
            </if>
            <if test="summedStartAt != null">
                AND <![CDATA[ summed_at >= #{summedStartAt} ]]>
            </if>
            <if test="summedEndAt != null">
                AND <![CDATA[ summed_at < #{summedEndAt} ]]>
            </if>
        </where>
    </select>


    <select id="findBy" parameterType="map" resultMap="alipayCashMap">
        select id,
        <include refid="columns"/>
        from <include refid="table"/>
        <where>
            <if test="criteria != null and criteria.status != null">
                AND status = #{criteria.status}
            </if>
            <if test="summedStartAt != null">
                AND <![CDATA[ summed_at >= #{summedStartAt} ]]>
            </if>
            <if test="summedEndAt != null">
                AND <![CDATA[ summed_at < #{summedEndAt} ]]>
            </if>
        </where>
        ORDER BY summed_at DESC LIMIT #{offset}, #{limit}
    </select>

    <select id="get" parameterType="long" resultMap="alipayCashMap">
        select id,
        <include refid="columns"/>
        from <include refid="table"/>
        where id = #{id}
    </select>

    <select id="getBySummedAt" parameterType="long" resultMap="alipayCashMap">
        select id,
        <include refid="columns"/>
        from <include refid="table"/>
        where <![CDATA[  summed_at >= #{summedStartAt} and summed_at < #{summedEndAt} ]]>
    </select>


    <update id="cashing" parameterType="map">
        update <include refid="table"/>
        set  updated_at = now(), status = 1 where id=#{id}
    </update>
    
    <delete id="delete" parameterType="long">
        delete from <include refid="table"/>
        where id = #{id}
    </delete>


    <update id="update" parameterType="map">
        UPDATE  <include refid="table"/>
        <set>

            <if test="cashTotalCount != null">
                cash_total_count = #{cashTotalCount},
            </if>

            updated_at = now(),
        </set>
        WHERE id=#{id}
    </update>

</mapper>