<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2014 大连锦霖科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<mapper namespace="BuyingOrderRecord">
    <resultMap id="BuyingOrderRecordMap" type="BuyingOrderRecord">
        <id property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="itemId" column="item_id"/>
        <result property="buyerId" column="buyer_id"/>
        <result property="sellerId" column="seller_id"/>
        <result property="quantity" column="quantity"/>
        <result property="buyingActivityId" column="buying_activity_id"/>
        <result property="itemOriginPrice" column="item_origin_price"/>
        <result property="itemBuyingPrice" column="item_buying_price"/>
        <result property="discount" column="discount"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="column">
        order_id,item_id,buyer_id,seller_id,quantity, buying_activity_id,item_origin_price,item_buying_price,discount,created_at, updated_at
    </sql>

    <insert id="create" parameterType="BuyingOrderRecord" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO buying_order_record (<include refid="column"/>)
        VALUES (#{orderId},#{itemId},#{buyerId},#{sellerId}, #{quantity}, #{buyingActivityId}, #{itemOriginPrice}, #{itemBuyingPrice}, #{discount},now(), now());
    </insert>

    <update id="update" parameterType="BuyingOrderRecord">
        UPDATE buying_order_record
        <set>
            updated_at=now(),
            <if test="orderId != null">order_id = #{orderId},</if>
            <if test="buyingActivityId != null">buying_activity_id = #{buyingActivityId},</if>
            <if test="itemId != null">item_id = #{itemId},</if>
            <if test="buyerId != null">buyer_id = #{buyerId},</if>
            <if test="sellerId != null">seller_id = #{sellerId},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="itemOriginPrice != null">item_origin_price = #{itemOriginPrice},</if>
            <if test="itemBuyingPrice != null">item_buying_price = #{itemBuyingPrice},</if>
            <if test="discount != null">discount = #{discount},</if>
        </set>
        WHERE id = #{id}
    </update>

    <select id="findById" parameterType="long" resultMap="BuyingOrderRecordMap">
        SELECT id, <include refid="column"/> FROM buying_order_record WHERE id = #{id}
    </select>

    <delete id="delete" parameterType="long">
        DELETE from buying_order_record WHERE id = #{id}
    </delete>



    <select id="countByActivityId" parameterType="long" resultType="long">
        select count(1)
        from buying_order_record
        <where>
            <if test="activityId!=null"> AND buying_activity_id =#{activityId}</if>
            <if test="sellerId!=null"> AND seller_id =#{sellerId}</if>
            <if test="orderId!=null"> AND order_id =#{orderId}</if>
            <if test="itemId!=null"> AND item_id =#{itemId}</if>
        </where>
    </select>

    <select id="getByActivityId" parameterType="map" resultMap="BuyingOrderRecordMap">
        select id,
        <include refid="column"/>
        from buying_order_record
        <where>
            <if test="activityId!=null"> AND buying_activity_id =#{activityId}</if>
            <if test="sellerId!=null"> AND seller_id =#{sellerId}</if>
            <if test="orderId!=null"> AND order_id =#{orderId}</if>
            <if test="itemId!=null"> AND item_id =#{itemId}</if>
        </where>
        limit #{offset},#{limit}
    </select>

    <select id="findByActivityId" parameterType="long" resultMap="BuyingOrderRecordMap">
        select id,
        <include refid="column"/>
        from buying_order_record
        WHERE buying_activity_id = #{activityId}
    </select>


    <update id="updateOrderId">
        UPDATE buying_order_record
        <set>
            updated_at = now(),
            order_id = #{newId},
        </set>
        WHERE order_id = #{oldId}
    </update>
</mapper>