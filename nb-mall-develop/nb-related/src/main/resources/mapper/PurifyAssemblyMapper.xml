<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2013 大连锦霖科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<!-- 净水组件(Created by Michael Zhao) -->
<mapper namespace="PurifyAssembly">
    <resultMap id="purifyAssemblyMap" type="PurifyAssembly">
        <id property="id" column="id"/>
        <result property="categoryId" column="category_id"/>
        <result property="assemblyName" column="assembly_name"/>
        <result property="assemblyTotal" column="assembly_total"/>
        <result property="assemblyIntroduce" column="assembly_introduce"/>
        <result property="assemblyImage" column="assembly_image"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="column">
        category_id, assembly_name, assembly_total, assembly_introduce, assembly_image, nb_purify_assembly.created_at, nb_purify_assembly.updated_at
    </sql>

    <insert id="create" parameterType="purifyAssembly" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO nb_purify_assembly (<include refid="column"/>)
        VALUES (#{categoryId}, #{assemblyName}, #{assemblyTotal}, #{assemblyIntroduce}, #{assemblyImage}, now(), now());
    </insert>

    <update id="update" parameterType="purifyAssembly">
        UPDATE nb_purify_assembly
        <set>
            <if test="categoryId!=null">category_id=#{categoryId},</if>
            <if test="assemblyName!=null">assembly_name=#{assemblyName},</if>
            <if test="assemblyTotal!=null">assembly_total=#{assemblyTotal},</if>
            <if test="assemblyIntroduce!=null">assembly_introduce=#{assemblyIntroduce},</if>
            <if test="assemblyImage!=null">assembly_image=#{assemblyImage},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        delete from nb_purify_assembly
        where id=#{id}
    </delete>

    <!-- 执行批量删除对应类目编号下的所有组件操作 -->
    <delete id="deleteByCategoryIds">
        delete from nb_purify_assembly
        where category_id in
        <foreach collection="array" item="categoryId"  open="(" separator="," close=")">
            #{categoryId}
        </foreach>
    </delete>

    <select id="findById" parameterType="long" resultMap="purifyAssemblyMap">
        SELECT id, <include refid="column"/> FROM nb_purify_assembly WHERE id = #{id}
    </select>

    <!-- 根据组件类目编号查询具体的组件实体 -->
    <select id="findByCategory" parameterType="long" resultMap="purifyAssemblyMap">
        SELECT id, <include refid="column"/> FROM nb_purify_assembly
        where category_id = #{categoryId}
    </select>

    <!-- 根据组件编号查询下级组件实体列表 -->
    <select id="findByAssembly" parameterType="long" resultMap="purifyAssemblyMap">
        SELECT nb_purify_assembly.id, <include refid="column"/> FROM nb_purify_assembly , nb_purify_relation
        where nb_purify_assembly.id = nb_purify_relation.assembly_child and assembly_parent = #{parentId}
    </select>

    <select id="findByCategoryIds" resultMap="purifyAssemblyMap">
        SELECT id, <include refid="column"/> FROM nb_purify_assembly
        where category_id in
        <foreach collection="array" item="categoryId"  open="(" separator="," close=")">
            #{categoryId}
        </foreach>
    </select>

    <select id="findByAssemblyIds" resultMap="purifyAssemblyMap">
        SELECT id, <include refid="column"/> FROM nb_purify_assembly
        where id in
        <foreach collection="array" item="assemblyId"  open="(" separator="," close=")">
            #{assemblyId}
        </foreach>
    </select>
</mapper>