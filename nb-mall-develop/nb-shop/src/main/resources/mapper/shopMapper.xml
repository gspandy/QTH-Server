<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<mapper namespace="Shop">
    <resultMap id="shopMap" type="Shop">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="userId" column="user_id"/>
        <result property="companyName" column="company_name"/>
        <result property="userName" column="user_name"/>
        <result property="status" column="status"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="businessId" column="business_id"/>
        <result property="imageUrl" column="image_url"/>
        <result property="province" column="province"/>
        <result property="city" column="city"/>
        <result property="region" column="region"/>
        <result property="street" column="street"/>

        <result property="taxRegisterNo" column="tax_register_no"/>
        <result property="isCod" column="is_cod"/>
        <result property="eInvoice" column="e_invoice"/>
        <result property="vatInvoice" column="vat_invoice"/>
        <result property="deliveryTime" column="delivery_time"/>
        <result property="deliveryPromise" column="delivery_promise"/>
        <result property="boundStyle" column="bound_style"/>
        <result property="accountId" column="account_id"/>

        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="qrCode" column="qrcode"/>
    </resultMap>

    <sql id="columns">
        name, user_id,user_name,status, phone, email,
        business_id, image_url, province, city, region, street,
        tax_register_no, is_cod,e_invoice, vat_invoice, delivery_time, delivery_promise,
        created_at, updated_at,is_water
    </sql>

    <select id="findById" parameterType="long" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from shops where id=#{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from shops where id in
        <foreach collection="list" open="(" separator=","
                 close=")" item="item">
            #{item}
        </foreach>
    </select>

    <select id="findByName" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from shops where name=#{name}
    </select>

    <select id="findLikeName" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from shops where name like concat(concat('%',#{name}),'%')
    </select>

    <select id="findByUserId" parameterType="long" resultMap="shopMap">
        SELECT id,company_name,
        <include refid="columns"/>
        FROM shops WHERE user_id = #{userId}
    </select>

    <insert id="create" parameterType="shop" useGeneratedKeys="true" keyProperty="id">
        insert into shops (<include refid="columns"/>)
        values
        (
        #{name}, #{userId}, #{userName}, #{status}, #{phone}, #{email},
        #{businessId}, #{imageUrl}, #{province}, #{city}, #{region}, #{street},
        #{taxRegisterNo}, #{isCod}, #{eInvoice}, #{vatInvoice}, #{deliveryTime}, #{deliveryPromise},
        now(), now(), #{isWater}
        )
    </insert>

    <delete id="delete" parameterType="long">
        delete from shops where id=#{id}
    </delete>

    <update id="update" parameterType="map">
        update shops
        <set>
            updated_at = now(),
            <if test="name!=null">name=#{name},</if>
            <if test="companyName!=null">company_name=#{companyName},</if>
            <if test="businessId!=null">business_id=#{businessId},</if>
            <if test="imageUrl!=null">image_url=#{imageUrl},</if>
            <if test="email!=null">email=#{email},</if>
            <if test="phone!=null">phone=#{phone},</if>
            <if test="province!=null">province=#{province},</if>
            <if test="city!=null">city=#{city},</if>
            <if test="region!=null">region=#{region},</if>
            <if test="street!=null">street=#{street},</if>
            <if test="isCod!=null">is_cod=#{isCod},</if>
            <if test="eInvoice!=null">e_invoice=#{eInvoice},</if>
            <if test="vatInvoice!=null">vat_invoice=#{vatInvoice},</if>
            <if test="deliveryTime!=null">delivery_time=#{deliveryTime},</if>
            <if test="deliveryPromise!=null">delivery_promise=#{deliveryPromise},</if>
            <if test="status!=null">status=#{status},</if>
            <if test="taxRegisterNo!=null">tax_register_no=#{taxRegisterNo},</if>
            <if test="isWater!=null">is_water=#{isWater},</if>
            <if test="qrCode!=null">qrcode=#{qrCode},</if>
        </set>
        where id=#{id}
    </update>

    <update id="updateStatusById" parameterType="map">
        update shops set updated_at=now(),status=#{status} where id = #{id}
    </update>

    <update id="batchUpdateStatus" parameterType="map">
        update shops set
        updated_at=now(),
        status=#{status}
        where id in
        <foreach collection="ids" item="id"
                 open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <select id="forDump" resultMap="shopMap">
        SELECT id,
        <include refid="columns"/>
        FROM shops WHERE  <![CDATA[id < #{lastId}]]> ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="forDeltaDump" resultMap="shopMap">
        SELECT id,
        <include refid="columns"/>
        FROM shops
        WHERE  <![CDATA[id < #{lastId} AND updated_at >#{compared}]]>
        ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="maxId" resultType="long">
        SELECT
        max(id)
        FROM shops;
    </select>

    <sql id="shopCondition">
        <where>
            <if test="sellerId!=null">user_id=#{sellerId}</if>
            <if test="id!=null">and id=#{id}</if>
            <if test="status!=null">and status=#{status}</if>
            <if test="businessId!=null">and business_id=#{businessId}</if>
            <if test="userName!=null">and user_name=#{userName}</if>
            <if test="name!=null">and name like concat(concat('%',#{name}),'%')</if>
            <if test="ids!=null">
                and id in
                <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="countOf" parameterType="map" resultType="long">
        select count(1) from shops
        <include refid="shopCondition"/>
    </select>

    <select id="pagination" parameterType="map" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from shops
        <include refid="shopCondition"/>
        ORDER BY id DESC LIMIT #{offset}, #{limit}
    </select>


    <sql id="table">
        shops
    </sql>


    <sql id="condition">
        <where>
            <if test="statuses != null">
                and status in
                <foreach collection="statuses" separator="," open="("
                         close=")" item="status">
                    #{status}
                </foreach>
            </if>
        </where>
    </sql>

    <select id="countBy" parameterType="map" resultType="long">
        select count(1)
        from
        <include refid="table"/>
        <include refid="condition"/>
    </select>

    <select id="findBy" parameterType="map" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from
        <include refid="table"/>
        <include refid="condition"/>
        order by id desc limit #{offset},#{limit}
    </select>


    <select id="findByTaxRegisterNo"  parameterType="string" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from
        <include refid="table"/>
        where tax_register_no = #{taxNo}
    </select>


    <select id="countOfWithTaxNo" parameterType="map" resultType="long">
        select count(1)
        from <include refid="table"/>
        where tax_register_no is not null
    </select>

    <select id="findWithTaxNo" parameterType="map" resultMap="shopMap">
        select id,
        <include refid="columns"/>
        from <include refid="table"/>
        where tax_register_no is not null
    </select>

    <update id="updateAccount" parameterType="map">
        update shops set bound_style=#{boundStyle},account_id=#{accountId} where id = #{id}
    </update>

</mapper>
