<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<mapper namespace="PreAuthorizationDepositOrder">

    <sql id="column">
        <![CDATA[
          id,order_id,trade_no,status,`type`,payer_logon_id,payer_user_id,deliver_status
        ]]>
    </sql>

    <resultMap id="PreAuthorizationDepositOrderResult" type="com.nowbook.agreements.model.PreAuthorizationDepositOrder">
        <result property="id" column="id"/>
        <result property="orderId" column="order_id"/>
        <result property="tradeNo" column="trade_no"/>
        <result property="status" column="status"/>
        <result property="type" column="type"/>
        <result property="payerLogonId" column="payer_logon_id"/>
        <result property="payerUserId" column="payer_user_id"/>
        <result property="deliverStatus" column="deliver_status"/>
    </resultMap>

    <select id="findPreAuthorizationByOrderId" resultMap="PreAuthorizationDepositOrderResult" parameterType="Long">
        select
        <include refid="column"/>
        from pre_authorization_deposit_order
        where order_id = #{orderId}
    </select>

    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        <![CDATA[
        INSERT INTO pre_authorization_deposit_order (
        order_id,
        trade_no,
        status,
        `type`,
        payer_logon_id,
        payer_user_id,
        deliver_status,
        created_at,
        updated_at
        ) VALUES (
        #{orderId},
        #{tradeNo},
        '0',
        #{type},
        #{payerLogonId},
        #{payerUserId},
        '0',
        now(),
        now()
        )
         ]]>
    </insert>

    <update id="update" parameterType="com.nowbook.agreements.model.PreAuthorizationDepositOrder">
        update pre_authorization_deposit_order
        <set>
            <if test="status!=null">status=#{status},</if>
            <if test="type!=null">`type`=#{type},</if>
            <if test="tradeNo!=null">trade_no=#{tradeNo},</if>
            <if test="payerLogonId!=null">payer_logon_id=#{payerLogonId},</if>
            <if test="payerUserId!=null">payer_user_id=#{payerUserId},</if>
            <if test="deliverStatus!=null">deliver_status=#{deliverStatus},</if>
            updated_at = now()
        </set>
        where order_id=#{orderId}
    </update>

    <select id="findAgreementsByOrderId" resultMap="PreAuthorizationDepositOrderResult" parameterType="Long">
        select
        id,
        order_id
        from nb_agreements_user
        where order_id = #{orderId}
    </select>

    <update id="updateById" parameterType="com.nowbook.agreements.model.PreAuthorizationDepositOrder">
        update pre_authorization_deposit_order
        <set>
            <if test="orderId!=null">order_id=#{orderId},</if>
            <if test="status!=null">status=#{status},</if>
            updated_at = now()
        </set>
        where id=#{id}
    </update>

    <select id="maxOnTrialId" resultType="long">
        SELECT max(order_id)
          from pre_authorization_deposit_order
         where status = 1
           and deliver_status = 1
    </select>

    <select id="findOnTrialOrderId" resultType="long" parameterType="map">
        select order_id
          from pre_authorization_deposit_order
         where status = 1
           and deliver_status = 1
           and #{lastId} >= order_id
        ORDER BY id DESC LIMIT #{limit}
    </select>

    <select id="findPredepositOrderByUserId" resultType="long" parameterType="long">
        select order_id
          from nb_agreements_user
         where
            0 = 0
           and #{userId} = user_id
        ORDER BY id DESC
    </select>

</mapper>