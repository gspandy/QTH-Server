<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2013 大连锦霖科技有限公司
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "mybatis-3-mapper.dtd">

<mapper namespace="CollectedShop">
    <resultMap id="collectedShopMap" type="CollectedShop">
        <id property="id" column="id"/>
        <id property="buyerId" column="buyer_id"/>
        <id property="sellerId" column="seller_id"/>
        <id property="shopId" column="shop_id"/>
        <id property="shopNameSnapshot" column="shop_name_snapshot"/>
        <id property="shopLogoSnapshot" column="shop_logo_snapshot"/>
        <id property="createdAt" column="created_at"/>
        <id property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="columns">
        buyer_id, seller_id, shop_id, shop_name_snapshot, shop_logo_snapshot, created_at, updated_at
    </sql>

    <sql id="table">
        collected_shops
    </sql>

    <insert id="create" parameterType="CollectedShop" useGeneratedKeys="true" keyProperty="id">
        insert into <include refid="table"/> (<include refid="columns"/>)
        values (
        #{buyerId}, #{sellerId}, #{shopId}, #{shopNameSnapshot}, #{shopLogoSnapshot}, now(), now()
        )
    </insert>

    <delete id="delete" parameterType="long">
        delete from <include refid="table"/> where id = #{id}
    </delete>

    <select id="get" parameterType="long" resultMap="collectedShopMap">
        select id, <include refid="columns"/>
        from <include refid="table"/> where id = #{id}
    </select>

    <select id="getByUserIdAndShopId" parameterType="map" resultMap="collectedShopMap">
        select id, <include refid="columns"/>
        from <include refid="table"/>
        where buyer_id = #{buyerId} and shop_id = #{shopId}
    </select>


    <select id="countOf" parameterType="map" resultType="long">
        select count(1)
        from <include refid="table"/>
        <include refid="condition"/>
    </select>

    <select id="findBy" parameterType="map" resultMap="collectedShopMap">
        select id,
        <include refid="columns"/>
        from <include refid="table"/>
        <include refid="condition"/>
        order by id desc
        limit #{offset},#{limit}
    </select>

    <sql id="condition">
        <where>
            <if test="criteria != null and criteria.buyerId != null">
                AND buyer_id = #{criteria.buyerId}
            </if>
            <if test="criteria != null and criteria.shopNameSnapshot != null">
                AND shop_name_snapshot LIKE CONCAT ('%', #{criteria.shopNameSnapshot}, '%')
            </if>
        </where>
    </sql>

</mapper>